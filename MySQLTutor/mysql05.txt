// 2021-07-27
---------------------------------------
Windows 針對資料庫表名稱小寫
C:\MAMP\conf\mysql\my.ini(cnf) => 處理之前先備份
...
[mysqld]
....
lower_case_table_names=2
--------------------------------------
剛提到的auto_increment=11 不是因為定義要雙位數, 
是因為已經有10筆資料(而且佔用了1~10), 所以下一筆從11開始, 
如果資料繼續新增, 這個數值也會一直增加, 表示下一筆自動產生的值
-------------------------------------------------------
逾時訂單需求日期, 1998
SELECT o.OrderID, c.CompanyName, e.FirstName, e.LastName
FROM Orders o
	JOIN Employees e ON (e.EmployeeID = o.EmployeeID)
    JOIN Customers c ON (c.CustomerID = o.CustomerID)
---------------------------------------------------------------
SELECT o.OrderID, c.CompanyName, e.FirstName, e.LastName
FROM Orders o
	JOIN Employees e ON (e.EmployeeID = o.EmployeeID)
    JOIN Customers c ON (c.CustomerID = o.CustomerID)
WHERE o.ShippedDate > o.RequiredDate AND o.OrderDate >= '1998-01-01'
ORDER BY c.CompanyName    
-------------------------------------------------------
SELECT o.OrderID, c.CompanyName, e.FirstName, e.LastName
FROM Orders o, Employees e, Customers c
WHERE (e.EmployeeID = o.EmployeeID) 
AND (c.CustomerID = o.CustomerID)
AND o.ShippedDate > o.RequiredDate 
AND o.OrderDate >= '1998-01-01'
ORDER BY c.CompanyName
------------------------------------------------------------
SELECT o.OrderID, o.CustomerID, c.CompanyName, c.ContactName, o.EmployeeID, e.FirstName, e.LastName
FROM Orders o, Employees e, Customers c
WHERE o.EmployeeID=e.EmployeeID AND o.CustomerID = c.CustomerID
AND o.ShippedDate > o.RequiredDate 
AND o.OrderDate >= '1998-01-01'
ORDER BY o.CustomerID
--------------------------------------------------------------
SELECT o.OrderID, o.CustomerID, c.CompanyName, c.ContactName, o.EmployeeID, e.FirstName, e.LastName
FROM Orders o
	JOIN Employees e ON (o.EmployeeID = e.EmployeeID)
    JOIN Customers c ON (o.CustomerID = c.CustomerID)
WHERE o.ShippedDate > o.RequiredDate 
AND o.OrderDate >= '1998-01-01'
ORDER BY o.CustomerID
--------------------------------------------------------
請問 join跟子查詢之間有差別嗎
join on 條件 用 副表=主表
07271014的時候 用 主表=副表,
雖然兩表交換不影響查詢結果
----------------------------------------------------------
哪些公司的訂單數量在10張以上的, 列出公司名稱, 以及單量, 在1997-01-01年以後
=> Orders
=> WHERE OrderDate >= '1997--01-01'
=> GROUP BY CustomerID => COUNT(OrderID)
=> JOIN Customers ON o.CustomerID = c.CustomerID

SELECT c.CompanyName, COUNT(o.OrderID) AS nums
FROM Customers c
	JOIN Orders o ON (c.CustomerID = o.CustomerID)
WHERE o.OrderDate >= '1997-01-01'
GROUP BY c.CustomerID
HAVING nums >= 10
ORDER BY nums DESC
------------------------------------------------------------
哪些公司的單一商品銷售額是 > 10000 => Home Work
哪些公司的單一訂單銷售額是 > 10000 => Home Work
哪些公司的總銷售額是 > 10000 => Home Work
--------------------------------------------------
SELECT DISTINCT od1.ProductID, od1.UnitPrice
FROM OrderDetails od1
WHERE od1.UnitPrice = (
	SELECT MAX(UnitPrice)
    FROM OrderDetails od2
    WHERE od1.ProductID = od2.ProductID
)
ORDER BY od1.ProductID
---------------------------------------------------
銷售排行榜
Employees, Orders, OrderDetails
=> Orders => OrderDetails
=> Orders => Employees
=> Group by Orders.EmployeeID

SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity) AS total
FROM Orders o
	JOIN OrderDetails od ON (o.OrderID = od.OrderID)
    JOIN Employees e ON (o.EmployeeID = e.EmployeeID)
GROUP BY o.EmployeeID 
ORDER BY total DESC
--- 驗算 ---
SELECT SUM(UnitPrice * Quantity)
FROM OrderDetails
WHERE OrderID in  (
	SELECT OrderID FROM Orders
    WHERE Orders.EmployeeID = 6
)
------------------------
SELECT p.ProductName, s.CompanyName, s.ContactName
FROM Products p
	JOIN Suppliers s ON (p.SupplierID = s.SupplierID)
LIMIT 10
----------------------------
SELECT p.ProductName, s.CompanyName, s.ContactName
FROM Products p
	JOIN Suppliers s USING (SupplierID)
LIMIT 10
----------------------------
SELECT p.ProductName, s.CompanyName, s.ContactName
FROM Products p, Suppliers s 
WHERE p.SupplierID = s.SupplierID
LIMIT 10



--------------------
Use class

ALTER TABLE students ADD COLUMN ch INT DEFAULT 0, ADD COLUMN eng INT DEFAULT 0,
ADD COLUMN math INT DEFAULT 0

UPDATE students SET ch = 99, eng = 97, math= 95
UPDATE students SET ch = 99, eng = 97, math= 95 WHERE cID = 3;
UPDATE students SET ch = 89, eng = 79, math= 59 WHERE cName LIKE '林%'
UPDATE students SET ch = RAND()*101, eng = RAND()*101, math = RAND()*101
UPDATE students SET ch = FLOOR(RAND()*101), eng = FLOOR(RAND()*101), math = FLOOR(RAND()*101)





